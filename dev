#!/usr/bin/env bash

# C="g++"
C="clang++"
W="-Wall -Wextra -Wno-infinite-recursion -Wno-unused-parameter"
O="-foptimize-sibling-calls -O2"
L="-std=c++17 -lstdc++fs"
PREFIX=$HOME

tangle () {
    ./tangle.js
}

setup_env () {
    export JOJO=$HOME/.jojo
}

build ()
{
    clean
    tangle
    time $C -o jojo jojo.cpp $W $L
}

release () {
    clean
    time $C -o jojo jojo.cpp $W $O $L
}

clean () {
    rm -f jojo
}

test () {
    for FILE in $(ls test | grep "\.jo" | grep "test-")
    do
        setup_env
        ./jojo "test/$FILE"
    done
}

debug () {
    # time valgrind --leak-check=full ./jojo
    for FILE in $(ls test | grep "\.jo" | grep "test-")
    do
        setup_env
        echo "<test/$FILE>" && valgrind ./jojo "test/$FILE" && echo "</test/$FILE>" && echo ""
    done
}

install () {
    cp jojo $PREFIX/bin/
}

uninstall () {
    rm $PREFIX/bin/jojo
}

main () {
    for TASK in $@
    do
        $TASK
    done
}

main $@
