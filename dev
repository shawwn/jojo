#!/usr/bin/env bash

# C="g++"
C="clang++"
W="-Wall -Wextra -Wno-infinite-recursion -Wno-unused-parameter"
L="-std=c++17 -lstdc++fs"
O="-foptimize-sibling-calls -O2"

export JOJO=$HOME/.jojo
export PATH=$JOJO/bin:$PATH

tangle ()
{
    ./tangle.js
}

b () # build
{
    clean
    tangle
    time $C -o bin/jojo jojo.cpp $W $L
}

bo () # build with optimization
{
    clean
    tangle
    time $C -o bin/jojo jojo.cpp $W $L $O
}

clean ()
{
    rm -f bin/jojo
}

t ()
{
    for FILE in $(ls test | grep "\.jo" | grep "test-")
    do
        ./bin/jojo "test/$FILE"
    done
}

# debug () {
#     # time valgrind --leak-check=full jojo
#     for FILE in $(ls test | grep "\.jo" | grep "test-")
#     do
#         echo "<test/$FILE>" && valgrind jojo "test/$FILE" && echo "</test/$FILE>" && echo ""
#     done
# }

i () # install
{
    install -Dsm755 bin/jojo $JOJO/bin/jojo
    for FILE in $(ls lib)
    do
        install -Dm644 lib/$FILE $JOJO/lib/$FILE
    done
}

main ()
{
    for TASK in $@
    do
        $TASK
    done
}

main $@
