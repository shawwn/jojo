#!/usr/bin/env bash

# C="g++"
C="clang++"
PREFIX=$HOME

release () {
    clean

    time $C $F jojo.cpp -o jojo
}

clean () {
    rm -f jojo
}

run () {
    time ./jojo
}

test () {
    time ./jojo
    for FILE in $(ls test | grep "\.jo" | grep "test-")
    do
        ./jojo "test/$FILE"
    done
}

debug () {
    build
    time valgrind ./jojo
    # time valgrind --leak-check=full ./jojo
}

install () {
    cp jojo $PREFIX/bin/
}


uninstall () {
    rm $PREFIX/bin/jojo
}

build () {
    F="-Wall -Wno-infinite-recursion"
    # F="-Wall -Wno-infinite-recursion -foptimize-sibling-calls -O2"
    for FILE in $(ls | grep "\.cpp")
    do
        $C $F -c $FILE
    done
}

build_all () {
    # cd import; cd build; cd ..
    # cd syntax; build; cd ..
    # cd test; build; cd ..
    # cd object; build; cd ..
    $C $F -o jojo jojo.o $(find | grep "\.o")
}

main () {
    for TASK in $@
    do
        $TASK
    done
}

main $@
