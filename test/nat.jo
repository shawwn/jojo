(= zero-t (data))
(= succ-t (data prev))

(= zero zero-c)
(= one (succ-c zero-c))
(= two (succ-c (succ-c zero-c)))

(println zero)
(println one)
(println two)
(newline)

(= (nat-add x y)
   (case x
     (zero-t y)
     (succ-t (succ-c (recur x.prev y)))))

(= (nat-mul x y)
   (case x
     (zero-t zero-c)
     (succ-t (nat-add y (recur x.prev y)))))

(= (nat-factorial x)
   (case x
     (zero-t (succ-c zero-c))
     (succ-t (nat-mul x (recur x.prev)))))

(println (nat-mul two two))


(= (zero.double-println)
   (println this)
   (println this))

(zero.double-println)

(= (succ.inc)
   (nat-add this one))

(println (one.inc))
(println (two.inc))
